<?xml version="1.0"?>
<robot name="rgi" xmlns:xacro="http://www.ros.org/wiki/xacro">
 
  <!-- Included URDF/XACRO Files -->
  <xacro:include filename="$(find rgi_description)/urdf/materials.xacro" />
  <xacro:include filename="$(find rgi_description)/urdf/wheel.xacro" />
  <xacro:include filename="$(find rgi_description)/urdf/ptz.xacro" />

  <!-- PROPERTY LIST -->
  <!--All units in m-kg-s-radians unit system -->
  <property name="M_PI" value="3.1415926535897931" />
 
  <!-- Main Body-base -->
  <property name="base_x_size" value="0.378" /> 
  <property name="base_y_size" value="0.216" /> 
  <property name="base_z_size" value="0.11" />
  <property name="base_mass" value="3.0" /> <!-- in kg-->

 
  <!--Inertial macros for the box and cylinder. Units are kg*m^2-->
  <macro name="box_inertia" params="m x y z">
    <inertia  ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
              iyy="${m*(x*x+z*z)/12}" iyz = "0"
              izz="${m*(x*x+z*z)/12}" /> 
  </macro>
 
  <macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
  </macro>

  <!-- BASE-FOOTPRINT -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
  <link name="base_footprint">
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0" 
          izz="0.0001" />
    </inertial>
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>
 
  <gazebo reference="base_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
 
  <joint name="base_footprint_joint" type="fixed">
  <origin xyz="0 0 ${wheel_radius - base_z_origin_to_wheel_origin}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>
 
  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="base_link">
    <inertial>
      <mass value="${base_mass}" />
      <origin xyz="0 0 0" />
      <!--The 3x3 rotational inertia matrix. -->
      <box_inertia  m="${base_mass}" x="${base_x_size}" y="${base_y_size}" z="${base_z_size}"/> 
    </inertial>    
    <visual>
      <origin xyz="0 0 -0.047" rpy="0 0 0" />
      <geometry>
        <!--box size="${base_x_size} ${base_y_size} ${base_z_size}"/-->
				<mesh filename="package://rgi_description/meshes/base_link.stl"
				scale = "0.407	0.57 0.4579439252" />
      </geometry>
      <material name="Black" />
    </visual>  
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0 " />
      <geometry>
         <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
      </geometry>
    </collision>     
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
 <!--Just 4 Display-->
  <link name="top_plate">
    <collision>

      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
				<box size="0.001 0.001 0.001"/>
				<!--the collision boundary for parts are taken into account by collision boundary of the base_link-->
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 -0.047" rpy="0 0 0"/>
			<geometry>
				<mesh filename="package://rgi_description/meshes/top_plate.stl"
				scale = "0.407	0.57 0.4579439252" />
      </geometry>
      <material name="black"/>  
    </visual>

    <inertial>
      <origin xyz="0 0 0.1" rpy="0 0 0"/>
      <mass value="0.1"/>
      <inertia
				ixx="0.01" ixy="0.0" ixz="0.0"
				iyy="0.01" iyz="0.0"
				izz="0.01"/>
    </inertial>
  </link>
  <joint name="joint_top_plate" type="fixed">
    <parent link="base_link"/>
    <child link="top_plate"/>
    <origin xyz="0 0 0" rpy="0 0 0 " /> 
  </joint>
  <gazebo reference="top_plate">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
<!-- end Just 4 Display top_plate-->
  <!-- PTZb assembly -->
	<ptz parent= "base_link" x_offset="0.073" y_offset="0" z_offset="${base_z_size/2}" />

  <!-- WHEELs -->
  <wheel fb="front" lr="right" parent="base_link" translateX="1" translateY="-1" flipY="-1"/>
  <wheel fb="front" lr="left" parent="base_link" translateX="1" translateY="1" flipY="-1"/>
  <wheel fb="center" lr="right" parent="base_link" translateX="0" translateY="-1" flipY="-1"/>
  <wheel fb="center" lr="left" parent="base_link" translateX="0" translateY="1" flipY="-1"/>
  <wheel fb="back" lr="right" parent="base_link" translateX="-1" translateY="-1" flipY="-1"/>
  <wheel fb="back" lr="left" parent="base_link" translateX="-1" translateY="1" flipY="-1"/>
 
  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <leftFrontJoint>front_left_wheel_joint</leftFrontJoint>
      <rightFrontJoint>front_right_wheel_joint</rightFrontJoint>
      <leftRearJoint>back_left_wheel_joint</leftRearJoint>
      <rightRearJoint>back_right_wheel_joint</rightRearJoint>
      <wheelSeparation>${base_y_size}</wheelSeparation>
      <wheelDiameter>${2*wheel_radius}</wheelDiameter>
      <torque>35</torque>
      <broadcastTF>1</broadcastTF>
      <odometryFrame>map</odometryFrame>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so" />
  </gazebo>
 
</robot>
